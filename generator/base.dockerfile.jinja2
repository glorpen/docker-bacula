FROM {{ base_image }} as base

RUN {{ packages_cmd_install }} {{ packages_base }}  && {{ packages_cmd_clean }}
	
FROM base as dev

RUN {{ packages_cmd_install }} {{ packages_base_dev }} && {{ packages_cmd_clean }}

RUN curl -k {{ bacula_url }} > bacula.tar.gz \
	&& mkdir -p /usr/src/bacula \
	&& tar -C /usr/src/bacula -xpf bacula.tar.gz --strip-components 1

WORKDIR /usr/src/bacula


RUN curl -k https://git.alpinelinux.org/aports/plain/main/bacula/bacula-7.4.0-path-mounted.patch | patch -p1

RUN cd autoconf \
	&& autoconf \
	&& cp -av configure ../configure \
	&& cd .. \
	&& ./configure \
#		--build=$CBUILD \
#		--host=$CHOST \
		--sbindir=/opt/bacula/bin \
		--prefix=/opt/bacula \
		--sysconfdir=/opt/bacula/etc \
		--localstatedir=/opt/bacula/var \
		--mandir=/opt/bacula/share/man \
		--docdir=/opt/bacula/share/doc \
		--infodir=/opt/bacula/share/info \
		--with-pid-dir=/opt/bacula/run \
		--with-subsys-dir=/run/lock/subsys \
		--with-logdir=/opt/bacula/log \
		--enable-largefile \
		--enable-smartalloc \
		--disable-nls \
		--with-openssl=/usr/include/openssl \
		{% if bacula_component in ["console", "client"] %}--enable-client-only {% else %}--with-postgresql --with-mysql --with-sqlite3 {% endif -%}
		--with-scriptdir=/opt/bacula/etc/scripts \
		--with-working-dir=/opt/bacula/var/lib \
		--with-dir-user=root \
		--with-dir-group=root \
		--with-archivedir=/opt/bacula/var/lib/archive \
		--with-sd-user=root \
		--with-sd-group=root \
		--with-fd-user=root \
		--with-fd-group=root \
		--with-sbin-perm=0755 \
		--with-readline=/usr/include/readline

RUN make -j$(nproc)

RUN make DESTDIR=/usr/src/bacula-root install

RUN mkdir -p /opt/bacula/bin /opt/bacula/lib /opt/bacula/etc /opt/bacula/var /opt/bacula/run

{% if bacula_component == "console" %}
RUN cd /usr/src/bacula-root/{{ install_dir }} \
	&& install bin/bconsole bin/bbconsjson {{ install_dir }}/bin/ \
	&& install etc/bconsole.conf {{ install_dir }}/etc/ \
	&& find ./lib -regex '.*/lib\(bac\|baccfg\)[0-9.-]*.so' -exec mv -v {} {{ install_dir }}/lib/ \;
{% endif %}

{% if bacula_component == "client" %}
RUN cd /usr/src/bacula-root/{{ install_dir }} \
	&& install bin/bacula-fd bin/bfdjson {{ install_dir }}/bin/ \
	&& install etc/bacula-fd.conf {{ install_dir }}/etc/ \
	&& find ./lib -regex '.*/lib\(bacfind\|bac\|baccfg\)[0-9.-]*.so' -exec mv -v {} {{ install_dir }}/lib/ \; \
	&& mv ./var/lib {{ install_dir }}/var/lib
{% endif %}

{% if bacula_component == "storage" %}
RUN cd /usr/src/bacula-root/{{ install_dir }} \
	&& install bin/bacula-sd {{ install_dir }}/bin/ \
	&& install etc/bacula-sd.conf {{ install_dir }}/etc/ \
	&& find ./lib -regex '.*/lib\(bacsd\|bac\|baccfg\)[0-9.-]*.so' -exec mv -v {} {{ install_dir }}/lib/ \; \
	&& mv ./var/lib {{ install_dir }}/var/lib
{% endif %}

{% if bacula_component.startswith("director") %}
RUN cd /usr/src/bacula-root/{{ install_dir }} \
	&& install bin/bacula-dir {{ install_dir }}/bin/ \
	&& install etc/bacula-dir.conf {{ install_dir }}/etc/ \
	&& find ./lib -regex '.*/lib\(bacfind\|bac\|baccfg\|baccats.*\|bacsql\)[0-9.-]*.so' -exec mv -v {} {{ install_dir }}/lib/ \; \
	&& mv ./var/lib {{ install_dir }}/var/lib \
	&& rm {{ install_dir }}/lib/libbaccats-{{ bacula_version }}.so
{% endif %}

RUN find {{ install_dir }} -iname "*.a" -delete \
    && find {{ install_dir }} -iname "*.so" -type f -exec strip -ps {} \; \
    && find {{ install_dir }} \( -name "*.so" -or -perm +{% if system == "alpine" %}0001{% else %}x{% endif %} \) -type f -exec strip -psv {} 2> /dev/null \;

FROM base

COPY --from=dev /opt/bacula /opt/bacula

{% if bacula_component.startswith("director") %}
{% if "sqlite" in bacula_component %}
RUN ln -sf libbaccats-sqlite3.so {{ install_dir}}/lib/libbaccats-{{ bacula_version }}.so \
	&& {{ packages_cmd_install }} {{ packages_libs_sqlite }} && {{ packages_cmd_clean }}
{% endif %}
{% if "mysql" in bacula_component %}
RUN ln -sf libbaccats-mysql.so {{ install_dir}}/lib/libbaccats-{{ bacula_version }}.so \
	&& {{ packages_cmd_install }} {{ packages_libs_mysql }} && {{ packages_cmd_clean }}
{% endif %}
{% if "postgresql" in bacula_component %}
RUN ln -sf libbaccats-postgresql.so {{ install_dir}}/lib/libbaccats-{{ bacula_version }}.so \
	&& {{ packages_cmd_install }} {{ packages_libs_postgresql }} && {{ packages_cmd_clean }}
{% endif %}
{% endif %}

ENTRYPOINT [
{%- block entrypoint -%}
{%- if bacula_component.startswith("director") -%}
"/usr/sbin/bacula-dir"
{%- elif bacula_component == "storage" -%}
"/usr/sbin/bacula-sd"
{%- elif bacula_component == "client" -%}
"/usr/sbin/bacula-fd"
{%- elif bacula_component == "console" -%}
"/usr/sbin/bconsole"
{%- endif -%}
{%- endblock -%}
]

{% if bacula_component.startswith("director") %}
CMD ["-fP"] 
{% elif bacula_component == "storage" %}
CMD ["-fP"]
{% elif bacula_component == "client" %}
CMD ["-fP"]
{% endif %}

{% block post %}
{% if packages_post_additional %}
RUN {{ packages_cmd_install }} {{ packages_post_additional }}  && {{ packages_cmd_clean }}
{% endif%}
{% endblock %}
