#
# Default Bacula Director Configuration file
#
#  The only thing that MUST be changed is to add one or more
#   file or directory names in the Include directive of the
#   FileSet resource.
#
#  For Bacula release 9.4.1 (20 December 2018) -- unknown unknown
#
#  You might also want to change the default email address
#   from root to your address.  See the "mail" and "operator"
#   directives in the Messages resource.
#
# Copyright (C) 2000-2017 Kern Sibbald
# License: BSD 2-Clause; see file LICENSE-FOSS
#

Director {                            # define myself
  Name = example-director
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/opt/bacula/etc/scripts/query.sql"
  WorkingDirectory = "/opt/bacula/var/lib"
  PidDirectory = "/opt/bacula/run"
  Maximum Concurrent Jobs = 20
  Password = "XgrA0Jf6eVjOsA3AgNAxgYYFGLougAUbgo5im8MfPlOs"         # Console password
  Messages = Daemon
}

Storage {
  Name = SomeStorage
  Address = storage
  Password = "LjoYReIPv6+FGFLbaVK+N8cJXzzwIFD227i2diw85JVV" # password for Storage daemon
  Device = SomeBackup    # same as Device in Storage daemon
  Media Type = File    # same as MediaType in Storage daemon
}



JobDefs {
  Name = "DefaultJob"
  Type = Backup
  Level = Incremental
  Client = example-client-1
  FileSet = "Full Set"
  Schedule = "WeeklyCycle"
  Storage = SomeStorage
  Messages = Standard
  Pool = File
  SpoolAttributes = yes
  Priority = 10
  #Write Bootstrap = "/opt/bacula/var/lib/%c.bsr"
}


#
# Define the main nightly save backup job
#   By default, this job will back up to disk in /opt/bacula/var/lib/archive
Job {
  Name = "BackupClient1"
  JobDefs = "DefaultJob"
}

#Job {
#  Name = "BackupClient2"
#  Client = 6723e1543f0d2-fd
#  JobDefs = "DefaultJob"
#}

#Job {
#  Name = "BackupClient1-to-Tape"
#  JobDefs = "DefaultJob"
#  Storage = LTO-4
#  Spool Data = yes    # Avoid shoe-shine
#  Pool = Default
#}

#}

FileSet {
    Name = "DatabaseMySQL"
    Include {
        File = /var/lib/mysql/
        Options {
            signature = SHA1
            wildfile = "/var/lib/mysql/*-bin.*"
            wildfile = "/var/lib/mysql/backup-*.sql.bz2"
        }
        Options {
            exclude = yes
            wild = "/var/lib/mysql/*"
        }
    }
}


# Backup the catalog database (after the nightly save)
Job {
  Name = "BackupCatalog"
  JobDefs = "DefaultJob"
  Level = Full
  FileSet = "DatabaseMySQL"
  Schedule = "Often"
  Client = example-client-mysql
  Enabled = yes
  
  RunScript {
      Command = "/opt/bacula/bin/bacula-mysql-backup %l"
      RunsOnClient = Yes
      RunsWhen = Before
  }
  RunScript {
      Command = "/opt/bacula/bin/bacula-mysql-backup clean"
      RunsOnClient = Yes
      Runs On Failure = Yes
      Fail Job On Error = No
      RunsWhen = After
  }

  #Write Bootstrap = "/opt/bacula/var/lib/%n.bsr"
  Priority = 11                   # run after main backup
}

#
# Standard Restore template, to be changed by Console program
#  Only one such job is needed for all Jobs/Clients/Storage ...
#
Job {
  Name = "RestoreFiles"
  Type = Restore
  Client=example-client-1
  Storage = SomeStorage
# The FileSet and Pool directives are not used by Restore Jobs
# but must not be removed
  FileSet="Full Set"
  Pool = File
  Messages = Standard
  Where = /opt/bacula/var/lib/archive/bacula-restores
}


# List of files to be backed up
FileSet {
  Name = "Full Set"
  Include {
    Options {
      signature = MD5
    }
#
#  Put your list of files here, preceded by 'File =', one per line
#    or include an external list with:
#
#    File = <file-name
#
#  Note: / backs up everything on the root partition.
#    if you have other partitions such as /usr or /home
#    you will probably want to add them too.
#
#  By default this is defined to point to the Bacula binary
#    directory to give a reasonable FileSet to backup to
#    disk storage during initial testing.
#
    File = /usr/sbin
  }

#
# If you backup the root directory, the following two excluded
#   files can be useful
#
  Exclude {
    File = /opt/bacula/var/lib
    File = /opt/bacula/var/lib/archive
    File = /proc
    File = /tmp
    File = /sys
    File = /.journal
    File = /.fsck
  }
}

#
# When to do the backups, full backup on first sunday of the month,
#  differential (i.e. incremental since full) every other sunday,
#  and incremental backups other days
Schedule {
  Name = "WeeklyCycle"
  Run = Full 1st sun at 23:05
  Run = Differential 2nd-5th sun at 23:05
  Run = Incremental mon-sat at 23:05
}

# This schedule does the catalog. It starts after the WeeklyCycle
Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 23:10
}

Schedule {
  Name = "Often"
  Run = Full sun-sat at 16:00
  Run = Incremental hourly at 0:00
  Run = Incremental hourly at 0:10
  Run = Incremental hourly at 0:20
  Run = Incremental hourly at 0:30
  Run = Incremental hourly at 0:40
  Run = Incremental hourly at 0:50
}

# This is the backup of the catalog
FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = "/opt/bacula/var/lib/bacula.sql"
  }
}

# Client (File Services) to backup
Client {
  Name = example-client-1
  Address = client-1
  FDPort = 9102
  Catalog = MyCatalog
  Password = "rkyDEP42dbRySK7tzwmATtHiK6XQB2/JeSKB+vhQW+8I"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}

Client {
  Name = example-client-mysql
  Address = client-mysql
  FDPort = 9102
  Catalog = MyCatalog
  Password = "rkyDEP42dbRySK7tzwmATtHiK6XQB2/JeSKB+vhQW+8I"          # password for FileDaemon
  File Retention = 60 days            # 60 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}


#
# Second Client (File Services) to backup
#  You should change Name, Address, and Password before using
#
#Client {
#  Name = 6723e1543f0d2-fd
#  Address = 6723e1543f0d2
#  FDPort = 9102
#  Catalog = MyCatalog
#  Password = "hx0IElSeMgUrGoYLxw2vtmwsXO7WxWmQiqWQ20JYTz/p2"        # password for FileDaemon 2
#  File Retention = 60 days           # 60 days
#  Job Retention = 6 months           # six months
#  AutoPrune = yes                    # Prune expired Jobs/Files
#}


# Definition of file Virtual Autochanger device
#Autochanger {
#  Name = example-storage-1
## Do not use "localhost" here
#  Address = storage                # N.B. Use a fully qualified name here
#  SDPort = 9103
#  Password = "LjoYReIPv6+FGFLbaVK+N8cJXzzwIFD227i2diw85JVV"
#  Device = FileChgr1
#  Media Type = example-storage-1
#  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
#  Autochanger = example-storage-1                 # point to ourself
#}

# Definition of a second file Virtual Autochanger device
#   Possibly pointing to a different disk drive
#Autochanger {
#  Name = File2
## Do not use "localhost" here
#  Address = 6723e1543f0d                # N.B. Use a fully qualified name here
#  SDPort = 9103
#  Password = "WZ0540Y300/98BuYpzymEx87VJ+ydk7pKlYJuhWPAwR8"
#  Device = FileChgr2
#  Media Type = File2
#  Autochanger = File2                 # point to ourself
#  Maximum Concurrent Jobs = 10        # run up to 10 jobs a the same time
#}

# Definition of LTO-4 tape Autochanger device
#Autochanger {
#  Name = LTO-4
#  Do not use "localhost" here
#  Address = 6723e1543f0d               # N.B. Use a fully qualified name here
#  SDPort = 9103
#  Password = "WZ0540Y300/98BuYpzymEx87VJ+ydk7pKlYJuhWPAwR8"         # password for Storage daemon
#  Device = LTO-4                     # must be same as Device in Storage daemon
#  Media Type = LTO-4                 # must be same as MediaType in Storage daemon
#  Autochanger = LTO-4                # enable for autochanger device
#  Maximum Concurrent Jobs = 10
#}

# Generic catalog service
Catalog {
  Name = MyCatalog
  DB Address = sql
  dbname = "bacula-db"; dbuser = "bacula-user"; dbpassword = "bacula-password"
}

# Reasonable message delivery -- send most everything to email address
#  and to the console
Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address.
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

#
#  mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
#  operatorcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
#  mail = root@localhost = all, !skipped
#  operator = root@localhost = mount
  console = all, !skipped, !saved
#
# WARNING! the following will create a file that you must cycle from
#          time to time as it will grow indefinitely. However, it will
#          also keep all your messages if they scroll off the console.
#
#  append = "/opt/bacula/log/bacula.log" = all, !skipped
  catalog = all
  stdout = all
}


#
# Message delivery for daemon messages (no job).
Messages {
  Name = Daemon
  #mailcommand = "/opt/bacula/bin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  #mail = root@localhost = all, !skipped
  console = all, !skipped, !saved
  stdout = all
  #append = "/opt/bacula/log/bacula.log" = all, !skipped
}

# File Pool definition
Pool {
  Name = File
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
  Label Format = "Vol-"               # Auto label
}


# Scratch pool definition
Pool {
  Name = Scratch
  Pool Type = Backup
}








